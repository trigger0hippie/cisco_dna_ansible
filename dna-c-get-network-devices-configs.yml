# edited to work with Ansible Tower AWX
---
- hosts: all
  connection: local
  gather_facts: false 
  tasks:
  - name: Get network devices
    cisco.dnac.network_device_info:
      dnac_host: "{{ inventory_hostname }}"
      dnac_username: "{{ dnac_username }}"
      dnac_password: "{{ dnac_password }}"
      dnac_verify: "{{ dnac_verify }}"
    register: network_devices
  - name: Get device list ids  
    ansible.builtin.set_fact:
      device_id_list: "{{ device_id_list | default([]) }} + ['{{ item.id }}']"
      device_ip_list: "{{ device_ip_list | default([]) }} + ['{{ item.managementIpAddress }}']"
    with_items: "{{ network_devices.dnac_response.response }}"
    when:
      - network_devices.dnac_response is defined
      - network_devices.dnac_response.response is defined
    no_log: true
  - name: Get Device configuration
    cisco.dnac.network_device_config_info:
      dnac_host: "{{ inventory_hostname }}"
      dnac_username: "{{ dnac_username }}"
      dnac_password: "{{ dnac_password }}"
      dnac_verify: "{{ dnac_verify }}"
      networkDeviceId: "{{ item }}"
    register: device_conf
    with_items:
      "{{ device_id_list }}"
    no_log: true
  - name: Display device configuration
    debug:
      msg: "{{ configs_loop.split('\n') }}"
    vars:
      configs_loop: |
        {%- for index in range(device_conf.results | length) %}
        {%- for index2 in range(network_devices.dnac_response.response | length) %}
        {%- if device_conf.results[index].item == network_devices.dnac_response.response[index2].id %} 
        ########################## HOSTNAME = {{ network_devices.dnac_response.response[index2].hostname }} | IP = {{ network_devices.dnac_response.response[index2].managementIpAddress }} ##########################
        ########################## Running_config: 
        {{ device_conf.results[index].dnac_response.response }} 
        {% endif %}
        {% else %}
        {{ device_conf.results[index] }} no results
        {% endfor %}
        {% endfor %}
    register: configs_loop
  - name: Save all to .txt file
    copy:
      content: "{{ configs_loop | to_nice_yaml }}"
      dest: /awx-output-folder/configs.txt
      
